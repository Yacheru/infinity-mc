// Code generated by mockery v2.49.2. DO NOT EDIT.

package mocks

import (
	context "context"
	entities "jwt-auth-service/internal/entities"

	mock "github.com/stretchr/testify/mock"
)

// AuthRedisRepository is an autogenerated mock type for the AuthRedisRepository type
type AuthRedisRepository struct {
	mock.Mock
}

// SetSession provides a mock function with given fields: ctx, userId, session
func (_m *AuthRedisRepository) SetSession(ctx context.Context, userId string, session *entities.Session) error {
	ret := _m.Called(ctx, userId, session)

	if len(ret) == 0 {
		panic("no return value specified for SetSession")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *entities.Session) error); ok {
		r0 = rf(ctx, userId, session)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewAuthRedisRepository creates a new instance of AuthRedisRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuthRedisRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *AuthRedisRepository {
	mock := &AuthRedisRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
